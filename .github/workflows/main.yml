name: CI/CD Pipeline for Medusa on ECS Fargate Spot

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Create ECS Cluster
      - name: Create ECS Cluster
        run: |
          aws ecs create-cluster \
            --cluster-name medusa-ecs-cluster \
            --region us-east-1

      # Register ECS Task Definition
      - name: Register Task Definition
        run: |
          echo '{
            "family": "medusa-task",
            "executionRoleArn": "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ecsTaskExecutionRole",
            "networkMode": "awsvpc",
            "containerDefinitions": [
              {
                "name": "medusa-container",
                "image": "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaswanth-medusa:latest",
                "memory": 512,
                "cpu": 256,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                  }
                ]
              }
            ],
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "256",
            "memory": "512",
            "networkMode": "awsvpc"
          }' > task-def.json
          
          aws ecs register-task-definition \
            --cli-input-json file://task-def.json \
            --region us-east-1

      # Create ECS Service
      - name: Create ECS Service
        run: |
          aws ecs create-service \
            --cluster medusa-ecs-cluster \
            --service-name medusa-ecs-service \
            --task-definition medusa-task \
            --desired-count 1 \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=["subnet-0eea857c1cf095bf7", "subnet-065b60dbd16e27db5","subnet-0a308cdbbeacd148b", "subnet-0c8e1c76292e064a0", "subnet-00a37eaefc5a11f57", "subnet-0fa9da9fc82cbcb3f"],securityGroups=[sg-06ecc53427be2eb4c],assignPublicIp=ENABLED}" \
            --region us-east-1

      # Create an Amazon ECR repository (if it doesn't already exist)
      - name: Create ECR Repository
        run: |
          aws ecr describe-repositories --repository-names jaswanth-medusa || \
          aws ecr create-repository \
            --repository-name jaswanth-medusa \
            --image-scanning-configuration scanOnPush=true \
            --region us-east-1

      # Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Build the Docker image
      - name: Build Docker image
        run: |
          cd my-medusa-shop
          docker build -t jaswanth-medusa:latest .
          docker tag jaswanth-medusa:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaswanth-medusa:latest

      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/jaswanth-medusa:latest

      # Deploy to ECS Fargate Spot
      - name: Deploy to ECS Fargate Spot
        run: |
          aws ecs update-service \
            --cluster medusa-ecs-cluster \
            --service medusa-ecs-service \
            --force-new-deployment
